@using PavlovStatsReader;
@using PavlovStatsReader.Models;
@using PterodactylPavlovServerController.Models;
@using PterodactylPavlovServerController.Services;
@using PterodactylPavlovServerDomain.Models;
@using Steam.Models.SteamCommunity;

<style>
    .row-alternating {
        background-color: rgba(0, 0, 0, 0.1);
    }

        .row-alternating:nth-child(2n) {
            background-color: rgba(0, 0, 0, 0.2);
        }

    a:link {
        text-decoration: none;
    }

    a:visited {
        text-decoration: none;
    }

    a:hover {
        text-decoration: none;
    }

    a:active {
        text-decoration: none;
    }
</style>
<div>
    <h1>@ServerName server statistics</h1>

    <h2>Table of contents</h2>
    <ol>
        <li><a href="stats/@(ServerId)#serverstats" class="link-light">Server statistics</a></li>

        @if (ServerStatsType == "SND")
        {
            <li><a href="stats/@(ServerId)#mapstats" class="link-light">Map statistics</a></li>
        }

        <li><a href="stats/@(ServerId)#gunstats" class="link-light">Gun statistics</a></li>

        @if (ServerStatsType == "SND")
        {
            <li><a href="stats/@(ServerId)#teamstats" class="link-light">Team statistics</a></li>
        }

        <li><a href="stats/@(ServerId)#playerstats" class="link-light">Player statistics</a></li>
    </ol>

    <h2 id="serverstats" class="mt-3">Server statistics</h2>
    <div class="card-group d-flex flex-wrap">
        <div class="row mt-3">
            <StatsCard ServerId="@ServerId" ImageURL="https://bloodisgood.net/wp-content/uploads/2022/10/image_2022-10-31_113333781.png" Title="Counts" Items="@ServerCountStats" />
            <StatsCard ServerId="@ServerId" ImageURL="https://bloodisgood.net/wp-content/uploads/2022/10/image_2022-10-31_113751041.png" Title="Kill stats" Items="@ServerKillStats" />
            @if (ServerStatsType == "SND")
            {
                <StatsCard ServerId="@ServerId" ImageURL="https://bloodisgood.net/wp-content/uploads/2022/10/image_2022-10-31_114051512.png" Title="Bomb stats" Items="@ServerBombStats" />
            }
        </div>
    </div>

    @if (ServerStatsType == "SND")
    {
        <h2 id="mapstats" class="mt-3">Map statistics</h2>
        <div class="card-group d-flex flex-wrap">
            @foreach ((MapWorkshopModel? workshopModel, CMapStats mapStats, Dictionary<string, object> items) in this.MapStatistics)
            {
                string imageUrl = "https://pavlov.bloodisgood.net/gunimages/unknown.png";
                string mapName = mapStats.MapId;
                string mapUrl = $"http://pavlovwiki.com/index.php/Default_Maps#{mapStats.MapId}";

                if (workshopModel != null)
                {
                    if (workshopModel.ImageURL != null)
                    {
                        imageUrl = workshopModel.ImageURL;
                    }

                    mapName = workshopModel.Name;
                    mapUrl = workshopModel.URL;
                }

                <StatsCard ServerId="@ServerId" ImageURL="@imageUrl" Title="@mapName" LinkURL="@mapUrl" OpenInBlank="true" Id="@($"map-{mapStats.MapId}-{mapStats.GameMode}")" Items="@items" />
            }
        </div>
    }

    <h2 id="gunstats" class="mt-3">Gun statistics</h2>
    <div class="card-group d-flex flex-wrap">
        @foreach ((CGunStats gunStats, Dictionary<string, object> items) in this.GunStatistics)
        {
            string imageUrl = "https://pavlov.bloodisgood.net/gunimages/unknown.png";
            string gunName = $"{gunStats.Name}(?)";
            string? gunKey = PavlovStatisticsService.GetCorrectGunKey(gunStats.Name);
            if (gunKey != null)
            {
                imageUrl = $"https://pavlov.bloodisgood.net/gunimages/{gunKey}.png";
                gunName = PavlovStatisticsService.GunMap[gunKey];
            }

            <StatsCard ServerId="@ServerId" ImageURL="@imageUrl" Id="@($"gun-{gunStats.Name}")" Title="@gunName" Items="@items" />
        }
    </div>

    @if (ServerStatsType == "SND")
    {
        <h2 id="teamstats" class="mt-3">Team statistics</h2>
        <div class="card-group d-flex flex-wrap">
            <StatsCard ServerId="@ServerId" ImageURL="https://bloodisgood.net/wp-content/uploads/2022/10/blueteam.png" Title="Blue team" Items="@Team0Stats" />
            <StatsCard ServerId="@ServerId" ImageURL="https://bloodisgood.net/wp-content/uploads/2022/10/redteam.png" Title="Red team" Items="@Team1Stats" />
        </div>
    }

    <h3 id="playerstats" class="mt-3">Player statistics</h3>
    <h4>
        Honorable mentions
    </h4>
    <div class="card-group d-flex flex-wrap">
        @foreach ((string title, PlayerSummaryModel playerSummary, Dictionary<string, object> items) in this.HonorableMentions)
        {
            <StatsCard ServerId="@ServerId" ImageURL="@playerSummary.AvatarFullUrl" Title="@title" Items="@items" />
        }
    </div>
    <br />
    <h4>
        Dishonorable mentions
    </h4>
    <div class="card-group d-flex flex-wrap">
        @foreach ((string title, PlayerSummaryModel playerSummary, Dictionary<string, object> items) in this.DishonorableMentions)
        {
            <StatsCard ServerId="@ServerId" ImageURL="@playerSummary.AvatarFullUrl" Title="@title" Items="@items" />
        }
    </div>
    <br />
    <h4>
        All players
    </h4>
    <div class="card-group d-flex flex-wrap">
        @foreach ((PlayerSummaryModel playerSummary, CPlayerStats playerStats, Dictionary<string, object> items) in this.PlayerStatistics)
        {
            <StatsCard ServerId="@ServerId" ImageURL="@playerSummary.AvatarFullUrl" LinkURL="@playerSummary.ProfileUrl" OpenInBlank="true" Title="@playerSummary.Nickname" Id="@($"player-{playerStats.UniqueId}")" Items="@items" />
        }
    </div>
</div>
<div>
    <h3 id="asterix-own-kills" class="mt-3">Percentages marked with *</h3>
    <p>
        Percentages marked with * are calculated using own amounts (eg. own kills), not total kill count.<br />
        Unmarked percentages are calculated using total amounts (eg. total kills).
    </p>
    @if (ServerStatsType == "SND")
    {
        <h3>Some values don't seem to add up</h3>
        <p>You may notice that some values don't seem to add up, like Team Blue Kills + Team Red Kills is not equal to Total Kills. This is caused because some statistics have filters applied, like only counting matches with at least two players or with a combined Team Blue and Team Red score of at least 10 (draws and skipped maps). Prerounds often are omitted as well. Total kills however counts each single kill.</p>
    }
</div>

<footer class="text-center text-lg-start bg-dark text-muted">
    <section class="d-flex justify-content-center justify-content-lg-between p-4 border-bottom">
        Stats updated on @DateTime.UtcNow.ToLongDateString() @DateTime.UtcNow.ToLongTimeString().<br />
        Stats are updated every eight hours.<br />
        All times are UTC.
    </section>
    <div class="text-center p-4">
        Provided by:
        <a class="text-reset fw-bold" href="https://codefreak.net/">codefreak.net</a> for <a class="text-reset fw-bold" href="https://bloodisgood.net/">Blood is Good</a>
    </div>
</footer>

@code {


    [Parameter]
    [EditorRequired]
    public string ServerStatsType { get; set; } = string.Empty;

    [Parameter]
    [EditorRequired]
    public string ServerId { get; set; } = string.Empty;

    [Parameter]
    [EditorRequired]
    public string ServerName { get; set; } = string.Empty;

    [Parameter]
    [EditorRequired]
    public Dictionary<string, object> ServerCountStats { get; set; } = new();

    [Parameter]
    [EditorRequired]
    public Dictionary<string, object> ServerKillStats { get; set; } = new();

    [Parameter]
    public Dictionary<string, object> ServerBombStats { get; set; } = new();

    [Parameter]
    public List<(MapWorkshopModel? workshop, CMapStats mapStats, Dictionary<string, object> items)> MapStatistics { get; set; } = new();

    [Parameter]
    [EditorRequired]
    public List<(CGunStats gunStats, Dictionary<string, object> items)> GunStatistics { get; set; } = new();

    [Parameter]
    [EditorRequired]
    public List<(PlayerSummaryModel summary, CPlayerStats playerStats, Dictionary<string, object> items)> PlayerStatistics { get; set; } = new();

    [Parameter]
    public Dictionary<string, object> Team0Stats { get; set; } = new();

    [Parameter]
    public Dictionary<string, object> Team1Stats { get; set; } = new();

    [Parameter]
    [EditorRequired]
    public List<(string title, PlayerSummaryModel summary, Dictionary<string, object> items)> HonorableMentions { get; set; } = new();

    [Parameter]
    [EditorRequired]
    public List<(string title, PlayerSummaryModel summary, Dictionary<string, object> items)> DishonorableMentions { get; set; } = new();
}
