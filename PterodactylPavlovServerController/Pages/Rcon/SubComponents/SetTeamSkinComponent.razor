@using Fluxor;
@using PavlovVR_Rcon.Models.Pavlov;
@using PterodactylPavlovServerController.Models;
@using PterodactylPavlovServerController.Services;
@using PterodactylPavlovServerController.Stores;
@using Steam.Models.SteamCommunity;
@inject PavlovRconService RconService
@inject IToastService Toast
@inject ApiKeyService ApiKey
@inject AuditService AuditService
@inject IDispatcher Dispatcher
@inject IState<PlayersState> PlayersState

<div class="me-2" style="width: 425px; display: inline-block; vertical-align: top;">
    <h3 class="mb-0">Set team skin</h3>
    <small class="text-muted">
        Sets the default skin for the target team.
    </small>
    <EditForm Model="@teamSkin" OnValidSubmit="@teamSkinSubmitted" class="mt-3">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <InputSelect @bind-Value="teamSkin.TeamId" class="form-select">
                <option selected disabled>Select a team</option>
                <option value="0">Blue team</option>
                <option value="1">Red team</option>
            </InputSelect>
        </div>

        <div class="mb-3">
            <InputSelect @bind-Value="teamSkin.Skin" class="form-select">
                <option selected disabled>Select a skin</option>
                @foreach (Skin skin in Enum.GetValues(typeof(Skin)))
                {
                    <option value="@skin">@skin</option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <button type="submit" class="btn btn-outline-success form-control">Set skin</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    [EditorRequired]
    public PavlovRconConnection Connection { get; set; }

    [Parameter]
    [EditorRequired]
    public ServerInfo ServerInfo { get; set; }

    private readonly SetTeamSkinModel teamSkin = new();


    private async Task teamSkinSubmitted()
    {
        try
        {
            await RconService.SetTeamSkin(ApiKey.ApiKey, Connection.ServerId, teamSkin.TeamId!.Value, teamSkin.Skin!.Value.ToString());
            Toast.ShowSuccess("Team skin has been set", "Team cheat executed");
            await AuditService.Add(Connection.ServerId, $"Set team {teamSkin.TeamId!.Value} skin to {teamSkin.Skin!.Value}");
        }
        catch (Exception e)
        {
            Toast.ShowError(e.Message);
        }
    }

}
